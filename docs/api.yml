openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22092
servers:
  - url: https://library.com

paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: releaseDateStart
          description: Filter books by a start date for releaseDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: releaseDateEnd
          description: Filter books by an end date for releaseDate
          required: false
          schema:
            type: string
            format: date
        - in: query
          name: page
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - in: query
          name: pageSize
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 50
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    put:
      summary: Create or update a list of books
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Book'
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

  /authors:
    get:
      summary: Get all authors
      description: Get a list of all authors.
      operationId: getAuthors
      responses:
        200:
          description: The list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

  /books/authors:
    put:
      summary: Attach Authors to Books
      description: Attach multiple Authors to multiple Books by specifying their IDs.
      operationId: attachAuthorsToBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Author'
      responses:
        200:
          description: The updated books with attached authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'

    delete:
      summary: Delete an author
      description: Delete an author by ID.
      operationId: deleteAuthor
      parameters:
        - in: path
          name: authorId
          description: ID of the author to delete
          required: true
          schema:
            type: string

  /books/{bookId}/authors/{authorId}:
    put:
      summary: Attach an Author to a Book
      description: Attach an Author to a Book by specifying their IDs.
      operationId: attachAuthorToBook
      parameters:
        - in: path
          name: bookId
          description: ID of the book
          required: true
          schema:
            type: string
        - in: path
          name: authorId
          description: ID of the author
          required: true
          schema:
            type: string
      responses:
        200:
          description: The list of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'

components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          $ref: '#/components/schemas/Author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date

    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
